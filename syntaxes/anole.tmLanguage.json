{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Anole-Lang",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#expression"
		},
		{
			"include": "#declaration"
		}
	],
	"repository": {
		"comment": {
			"name": "comment.line.anole",
			"begin": "#",
			"end": "\n"
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.anole",
					"match": "\\b(if|elif|else|while|do|foreach|as|break|continue|return|use|from)\\b"
				},
				{
					"name": "keyword.operator.anole",
					"match": "\\b(and|or|not|is|new|delay|match|enum)\\b"
				},
				{
					"name": "keyword.operator.anole",
					"match": "\\:|\\+|-|\\*|/|%|\\&|\\||\\^|~|<|>|!|=|!|<|>|\\?"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.anole",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.anole",
					"match": "\\\\."
				}
			]
		},
		"expression": {
			"patterns": [
				{
					"name": "constant.numeric.anole",
					"match": "\\b[0-9]+(\\.[0-9]*)?"
				},
				{
					"name": "entity.name.function.anole",
					"match": "\\b[a-zA-Z_][a-zA-Z_0-9]*\\b"
				}
			]
		},
		"declaration": {
			"begin": "@",
			"end": ":|{|;",
			"beginCaptures": {
				"0": {"name": "keyword.other.unit.anole"}
			},
			"patterns": [
				{
					"begin": "\\(",
					"end": "\\)",
					"beginCaptures": {
						"0": {"name": "entity.name.function.anole"}
					},
					"endCaptures": {
						"0": {"name": "entity.name.function.anole"}
					},
					"patterns": [
						{
							"include": "#declaration"
						}
					]
				}
			]
		}
	},
	"scopeName": "source.anole"
}
